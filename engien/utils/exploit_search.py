import subprocess
import json

def search_exploit(query):
    """
    Searches for exploits related to a given query using searchsploit.

    Args:
        query (str): The search term for exploits.

    Returns:
        dict: JSON output of the search results or an error message.
    """
    try:
        print(f"Searching for exploits related to: {query}...")
        result = subprocess.run(["searchsploit", query, "--json"], capture_output=True, text=True, timeout=30)
        
        if result.returncode == 0:
            return {
                "status": "success",
                "data": json.loads(result.stdout)
            }
        else:
            return {
                "status": "error",
                "message": "Failed to retrieve exploits."
            }
    
    except Exception as e:
        return {
            "status": "error",
            "message": str(e)
        }

if __name__ == "__main__":
    # Input search term
    search_term = input("Enter the exploit search term: ")
    search_term = "py remote"
    # Perform exploit search
    result = search_exploit(search_term)
    
    if result['status'] == "success":
        print("\nExploit Search Results:")
        print(json.dumps(result['data'], indent=4))
        print("Exploit Count:", len(result['data']["RESULTS_EXPLOIT"]))
    else:
        print(f"Error: {result['message']}")

 